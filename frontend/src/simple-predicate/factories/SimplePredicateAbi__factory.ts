/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.69.1
  Forc version: 0.46.1
  Fuel-Core version: 0.20.8
*/

import {
  Predicate,
  Provider,
} from 'fuels';

export type SimplePredicateAbiConfigurables = {
};

type SimplePredicateAbiInputs = [];

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "bool",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "main",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": []
}

const _bin = '0x7400000347000000000000000000002c5dfcc00110fff3001aec5000910000005c43f00024400000470000000100000000000000'

export class SimplePredicateAbi__factory {

  static readonly abi = _abi
  static readonly bin = _bin;

  static createInstance(provider: Provider, configurables?: SimplePredicateAbiConfigurables) {

    const { abi, bin } = SimplePredicateAbi__factory

    const predicate = new Predicate(bin, provider, abi, configurables);

    return predicate;

  }

}
