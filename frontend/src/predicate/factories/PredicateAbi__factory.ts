/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.69.1
  Forc version: 0.46.1
  Fuel-Core version: 0.20.8
*/

import {
  BigNumberish,
  BN,
  Predicate,
  Provider,
} from 'fuels';

export type AddressInput = { value: string };
export type AddressOutput = AddressInput;

export type PredicateAbiConfigurables = {
  REQUIRED_SIGNATURES: BigNumberish;
  SIGNERS: [AddressInput, AddressInput, AddressInput];
};

type PredicateAbiInputs = [];

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "[_; 3]",
      "components": [
        {
          "name": "__array_element",
          "type": 3,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "bool",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "main",
      "output": {
        "name": "",
        "type": 2,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "REQUIRED_SIGNATURES",
      "configurableType": {
        "name": "",
        "type": 4,
        "typeArguments": null
      },
      "offset": 1968
    },
    {
      "name": "SIGNERS",
      "configurableType": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "offset": 2016
    }
  ]
}

const _bin = '0x740000034700000000000000000007a85dfcc00110fff3001aec5000910000001ae8000020f8330058fbe00250fbe004740000181a43d0001ae8100020f8330058fbe00250fbe004740000121a47d000104104405d47f0001ae9100020f8330058fbe00250fbe0047400000a1a47d000104504405d43f00115411400764000025d43f001134114007640000124000000240400001af05000910000505ff100005ff110015ff120025ff130035ff140045ff150055ff160065ff170075ff180085ff3b0091aec5000910005301a5ba0001a57e0006140000113450000764400061341004076400001360000005043b3101a401000740000025043b3101a400000134500007644000613410040764000026140001874000001614000187400000161400009154564007644000113456400764400a61a4000005047b51072480020284504801a5000005d43f00616414400764000021af400007400009d5d43f0141041030061454302504bb3e8724c0040284914c05047b3e8504bb510504fb080725c00201b5c05c0105d35c072600020285d0600725c00201b5c15c0105d35c072600020285d06005043b1b0725c0040284135c0504fb4d0725c0040284d05c05043b4d0504fb0e8725c0040284d15c05047b260725c0020284525c03e4134401a408000134100407640000a5043b2185f4000005047b4d050490008724c0040284914c0504bb3187244004828490440740000075043b1685f401000504500405f440000504bb31872440048284904405047b48872400048284524005043b3185d41000013410040764000355043b4885047b2a872480048284504805043b4885d4100001341000076400001360000005043b2a8504100085047b44872480040284504805043b448724400201b440440104504405043b448724800201b481480104904805043b128724c0020284114c05041002072440020284124405043b1285047b2f01ae900001ae5100020f8330058fbe00250fbe0047400004c1a43d0005047b3c872480020284504805043b1f05f4000005047b3c8504bb060724c0020284914c050450008724c0020284524c0504bb36072440028284904407400000a5043b488504100405047b0c05f44100050491020724c0008284904c0504bb36072400028284914005043b28072440028284124405043b3605d4100001341000076400001360000005043b280504100085047b42872480020284504805043b4285d47f015104513007248006028ed1480724400201b4564401047b440504bb388724c0020284904c05043b3a8724c0020284114c0a141242076400002105140407500009d1af41000740000011af40000920005301af9500059f050505d43c0005d47c0015d4bc0025d4fc0035d53c0045d57c0055d5bc0065d5fc0075d63c0085defc009920000504af800001af05000910000305ff100005ff110015ff120025ff130035ff140045ff3b0051aec5000910000381a43a0001a4790001a4be0005d4ff014104d33001a500000265000001a5070005fed40005053b0085f5000005053b0105f5000001ae900001ae7b00020f8330058fbe00250fbe004740000165043b01872500020284135005043b0185d4fb0005053b0105d51400042413500724c0020284504c01af51000920000381af9200059f050305d43c0005d47c0015d4bc0025d4fc0035d53c0045defc005920000304af800001af05000910000585ff100005ff110015ff120025ff130035ff140045ff150055ff160065ff170075ff180085ff190095ff3b00a1aec5000910000401a63a0001a5f90001a5be0005d43f013264000001a6470007240002028ed84001a43b0005d450000504900085d492000504d00105d4d3000504100185d4100005f6510005f6520015f6530025f6500035d43f0131341000076400034504170105d4100001341000076400027504170105d4100005d47f01310410440504570105d4510005d497000504d70085d4d3000155104c07650000174000007264000001a507000155530007654000174000001285124c01a4940005f5d20001a5000005d4bf0131649448076480007504570085f450000504570105f4500001a40000026400000740000115d4970001049244010492500104d95005c4d30005e49300010514040750000105f5d9000504170085d47f0135f411000504170105d47f0135f4110001a40000026400000504180205d47f013264400001a6070005047b02072480020284504805d411000504910085d492000504d10105d4d3000504510185d4510005f6100005f6120015f6130025f6110035d43f0131341000076400034504170105d4100001341000076400027504170105d4100005d47f01310410440504570105d4510005d497000504d70085d4d3000155104c07650000174000007264000001a507000155530007654000174000001285124c01a4940005f5d20001a5000005d4bf0131649448076480007504570085f450000504570105f4500001a40000026400000740000115d4970001049244010492500104d85005c4d30005e49300010514040750000105f5d8000504170085d47f0135f411000504170105d47f0135f4110001a400000264000001af40000920000401af9600059f050585d43c0005d47c0015d4bc0025d4fc0035d53c0045d57c0055d5bc0065d5fc0075d63c0085d67c0095defc00a920000584af800000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000007b800000000000007e0'

export class PredicateAbi__factory {

  static readonly abi = _abi
  static readonly bin = _bin;

  static createInstance(provider: Provider, configurables?: PredicateAbiConfigurables) {

    const { abi, bin } = PredicateAbi__factory

    const predicate = new Predicate(bin, provider, abi, configurables);

    return predicate;

  }

}
