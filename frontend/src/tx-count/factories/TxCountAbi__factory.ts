/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.73.0
  Forc version: 0.49.2
  Fuel-Core version: 0.22.0
*/

import {
  Predicate,
  Provider,
} from 'fuels';

export type TxCountAbiConfigurables = {
};

type TxCountAbiInputs = [];

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "bool",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "main",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": []
}

const _bin = '0x7400000347000000000000000000008c5dfcc00110fff3001aec5000910000086140000113450000764400051341004076400001360000001a441000740000011a440000134110007640000613411040764000025d43f000364000006140010574000001614000075d47f00115450440764400025d47f0011345044076440001240000005c43f01024400000cccccccccccc000200000000000000020100000000000000'

export class TxCountAbi__factory {

  static readonly abi = _abi
  static readonly bin = _bin;

  static createInstance(provider: Provider, configurables?: TxCountAbiConfigurables) {

    const { abi, bin } = TxCountAbi__factory

    const predicate = new Predicate(bin, provider, abi, configurables);

    return predicate;

  }

}
